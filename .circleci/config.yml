defaults: &defaults
  docker:
    - image: gcr.io/planet-4-151612/p4-builder:develop
  working_directory:  /home/circleci/

version: 2

jobs:
  build-develop:
    <<: *defaults
    environment:
      APP_HOSTNAME: k8s.p4.greenpeace.org
      APP_HOSTPATH: base
      CLOUDSQL_INSTANCE: p4-develop-k8s
      CONTAINER_PREFIX: planet4-base
      GOOGLE_PROJECT_ID: planet-4-151612
      HELM_NAMESPACE: develop
      TYPE: "Container Build: planet4-base-x"
      WP_DB_NAME: planet4-base_wordpress
      WP_TITLE: Greenpeace Base Development
    steps:
      - setup_remote_docker

      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh
            mkdir -p /tmp/workspace/var
            echo "${CIRCLE_BUILD_NUM}" > /tmp/workspace/var/circle-build-num

      - run:
          name: Build
          working_directory: /home/circleci
          command: |
            if make
            then
              ${HOME}/scripts/notify-job-success.sh
            else
              ${HOME}/scripts/notify-job-failure.sh
              exit 1
            fi

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var

  test-selenium:
    <<: *defaults
    steps:
      - setup_remote_docker

      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Build Selenium Test Container
          background: true
          command: |
            git clone https://github.com/greenpeace/planet4-docker-selenium-tests
            pushd planet4-docker-selenium-tests
            docker build -t planet4-selenium-tests .
            popd
            touch /tmp/workspace/selenium-container-built

      - run:
          name: Clone planet4-docker-compose
          command: |
            git clone https://github.com/greenpeace/planet4-docker-compose

      - run:
          name: Start docker-compose
          command: |
            export BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)"
            export APP_IMAGE=gcr.io/planet-4-151612/planet4-base-app:${BUILD_TAG}
            export OPENRESTY_IMAGE=gcr.io/planet-4-151612/planet4-base-openresty:${BUILD_TAG}

            pushd planet4-docker-compose
            docker-compose -p test -f docker-compose.stateless.yml up -d
            popd

      - run:
          name: Wait until containers are ready
          command: |
            # 2 seconds * 150 == 5+ minutes
            interval=2
            loop=150

            # Number of consecutive successes to qualify as 'up'
            threshold=2
            success=0
            until [[ $success -ge $threshold ]]
            do
              # Curl to container and expect status code 200
              set +e
              docker run --network "container:test_openresty_1" --rm appropriate/curl -s -k "http://localhost" | grep -q "greenpeace"

              if [[ $? -eq 0 ]]
              then
                success=$((success+1))
                echo "Success: $success/$threshold"
              else
                success=0
              fi
              set -e

              loop=$((loop-1))
              if [[ $loop -lt 1 ]]
              then
                >&2 echo "[ERROR] Timeout waiting for docker-compose to start"
                >&2 docker-compose -p test logs
                exit 1
              fi

              [[ $success -ge $threshold ]] || sleep $interval
            done

      - run:
          name: Configure Selenium container
          command: |
            pushd planet4-docker-selenium-tests
            cat variables.env.example | sed "s/test.planet4.dev/localhost/g" > /tmp/workspace/var/variables.env
            popd

      - run:
          name: Configure WP Options
          command: |
            source /tmp/workspace/var/variables.env
            docker exec test_php-fpm_1 wp option set siteurl "http://localhost"
            docker exec test_php-fpm_1 wp option set home "http://localhost"
            docker exec test_php-fpm_1 wp user create ${PLANET4_USER} noreply@greenpeace.org --role=administrator --user_pass=${PLANET4_USER_PASS}
            docker exec test_redis_1 redis-cli flushdb

      - run:
          name: Wait for Selenium container to build
          command: |
            # 2 seconds * 150 == 5+ minutes
            interval=2
            loop=150

            while [ ! -f /tmp/workspace/selenium-container-built ]
            do
              loop=$((loop-1))
              if [[ $loop -lt 1 ]]
              then
                >&2 echo "[ERROR] Timeout waiting for docker-compose to start"
                >&2 docker-compose logs
                exit 1
              fi
              sleep $interval
            done

      - run:
          name: Run Selenium Tests
          command: |
            pushd planet4-docker-selenium-tests
            docker run --rm \
              --env-file /tmp/workspace/var/variables.env \
              --name planet4-tests \
              --network "container:test_openresty_1" \
              --shm-size=2g \
              planet4-selenium-tests
            popd

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - var

  deploy-develop:
    <<: *defaults
    environment:
      APP_HOSTNAME: k8s.p4.greenpeace.org
      APP_HOSTPATH: base
      CLOUDSQL_INSTANCE: p4-develop-k8s
      CONTAINER_PREFIX: planet4-base
      GOOGLE_PROJECT_ID: planet-4-151612
      HELM_NAMESPACE: develop
      WP_DB_NAME: planet4-base_wordpress
      WP_TITLE: Greenpeace Base Development
    steps:
      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: Configure
          command: |
            ${HOME}/scripts/activate-gcloud-account.sh

      - run:
          name: Deploy new containers
          environment:
            NEWRELIC_APPNAME: P4 base Development
          command: |
            BUILD_TAG="build-$(cat /tmp/workspace/var/circle-build-num)" \
            make deploy

workflows:
  version: 2
  develop:
    jobs:
    - build-develop:
        context: org-global
        filters:
          branches:
            only: develop
          tags:
            ignore: /^v.*/
    - test-selenium:
        requires:
          - build-develop
        filters:
          branches:
            only: develop
            ignore: /^v.*/
    - deploy-develop:
        context: org-global
        requires:
          - build-develop
        filters:
          branches:
            only: develop
